version: '3'
services:
  waitfordb:
    image: dadarek/wait-for-dependencies
    depends_on:
      - postgresql
    command: postgresql:5432

  postgresql:
    image: postgres:13.1
    container_name: postgresql
    volumes:
      - pgsql-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: mlflow-db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    hostname: postgresql
    restart: always

  mlflow:
    build: .
    container_name: mlflow
    expose:
      - 80
      - 443
    depends_on:
      - postgresql
      - waitfordb
    environment:
      DB_URI: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql:5432/mlflow-db
      VIRTUAL_HOST: ${HOST}
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: ${HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      AWS_ACCESS_KEY_ID: ${S3_ACCESS_TOKEN}
      AWS_SECRET_ACCESS_KEY: ${S3_ACCESS_SECRET}
      MLFLOW_S3_ENDPOINT_URL: ${S3_ENDPOINT_URI}
      AWS_DEFAULT_REGION: us-east
      S3_BUCKET: ${S3_BUCKET}

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./${HOST}:/etc/nginx/htpasswd/${HOST}
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - vhost:/etc/nginx/vhost.d
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - conf:/etc/nginx/conf.d
    environment:
      DEFAULT_HOST: ${HOST}
      DHPARAM_GENERATION: "false"
      HTTPS_METHOD: noredirect
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"


  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-lets-encrypt
    restart: always
    depends_on:
      - nginx-proxy
    volumes:
      - conf:/etc/nginx/conf.d
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy


volumes:
  certs:
  html:
  vhost:
  dhparam:
  conf:
  artifacts:
  pgsql-data:
